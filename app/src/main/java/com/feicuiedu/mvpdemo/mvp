1. 创建了业务类：主要是做了业务的操作，将业务分离出去
2. 视图的具体实现：Activity，视图进行了处理，通过接口回调的方式
视图和业务分离的最终结果

MVP 模型：项目架构方式
Model：数据模型，在项目中一般网络请求、数据库存取操作、文件的存取等来充当的
View：视图，纯视图，Activity、Fragment、自定义的View
Presenter：业务的操作，去执行业务操作

目标：完整的利用MVP实现登录
1. 视图的搭建：布局
2. 接口请求的构建
3. 创建一个业务类，实现登录的涉及到的业务
4. 分析一下视图
5. 具体的视图实现
6. 在业务类里面完成与视图的交互
7. 在Activity里面去进行业务的请求
5. 完成目标

总结：
MVP：作用：达到视图和业务的分离，降低项目的耦合性，方便我们进行开发和更新维护
使用的流程：
1. 单独的业务类，完成业务的操作
2. 视图的具体实现，业务和视图的交互通过视图接口来进行的

要求大家一定要掌握！！！！！！！更重要的是思路！！！！